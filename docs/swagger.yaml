swagger: "2.0"
schemes:
  - "http"
  - "https"
host: "image.your-domain.tld"
basePath: "/"
produces:
  - "application/json"
consumes:
  - "application/json"
info:
  title: "Hyperpic API"
  version: "v1.2.0"
  x-logo:
    url: "https://cdn.rawgit.com/hyperscale/hyperpic/master/_resources/hyperpic.svg"
  description: Fast HTTP microservice for high-level image processing.
  license:
    name: "MIT"
    url: "https://github.com/hyperscale/hyperpic/blob/master/LICENSE.md"
securityDefinitions:
  Bearer:
    description: Secret key
    type: apiKey
    name: Authorization
    in: header
tags:
  - name: "Image"
    x-displayName: "Image"
    description: "Create and manage image"
  - name: "Monitoring"
    x-displayName: "Monitoring"
    description: "Health check server and metrics"
definitions:
  HealthResponse:
    type: "object"
    required: ["status"]
    properties:
      status:
        type: "bool"
        description: "The status of server"
    example:
      status: true
  ImageDeleteResponse:
    type: "object"
    required: ["cache", "source"]
    properties:
      cache:
        type: "bool"
        description: "The status of cache file"
      source:
        type: "bool"
        description: "The status of source file"
    example:
      cache: true
      source: false
  ImageUploadResponse:
    type: "object"
    required: ["file", "size", "type", "hash"]
    properties:
      file:
        type: "string"
        description: "The path of uploaded image."
      size:
        type: "integer"
        description: "The size of uploaded image."
      type:
        type: "string"
        description: "The mime type of uploaded image."
      hash:
        type: "string"
        description: "The md5 hash of uploaded image."
    example:
      file: "/test.jpg"
      size: 125545
      type: "image/jpeg"
      hash: "7f76ff8615d64e788ea5e9633def1625"
  ErrorResponse:
    description: "Represents an error."
    type: "object"
    required: ["error"]
    properties:
      error:
        description: "The error."
        type: "object"
        properties:
          code:
            type: "integer"
            description: "The code of error."
          message:
            type: "string"
            description: "The message of error."
    example:
      error:
        code: 102
        message: "Something went wrong."
paths:
  /metrics:
    get:
      summary: "Prometheus metrics"
      produces:
        - "text/plain"
      responses:
        200:
          description: "no error"
      tags: ["Monitoring"]
  /health:
    get:
      summary: "healthcheck endpoint"
      produces:
        - "application/json"
      responses:
        200:
          description: "no error"
          schema:
            $ref: "#/definitions/HealthResponse"
        500:
          description: "server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags: ["Monitoring"]
  /{file}:
    delete:
      summary: "Delete image"
      security:
        - Bearer: []
      produces:
        - "application/json"
      responses:
        200:
          description: "no error"
          schema:
            $ref: "#/definitions/ImageDeleteResponse"
        500:
          description: "server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: "file"
          in: "path"
          required: true
          description: "The path and name of file."
          type: "string"
        - name: "from"
          in: "query"
          type: "string"
          description: "Remove cache file or source with cache file"
          default: cache
          enum:
            - cache
            - source
      tags: ["Image"]
    post:
      summary: "Upload image"
      security:
        - Bearer: []
      prouces:
        - "application/json"
      consumes:
        - multipart/form-data
        - image/jpeg
        - image/png
        - image/webp
      responses:
        201:
          description: "no error"
          schema:
            $ref: "#/definitions/ImageUploadResponse"
        500:
          description: "server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: "file"
          in: "path"
          required: true
          description: "The path and name of file."
          type: "string"
        - name: "image"
          in: "fromDate"
          type: "file"
          required: true
          description: "The uploaded image data."
      tags: ["Image"]
    get:
      summary: "display image"
      produces:
        - "image/jpeg"
        - "image/webp"
        - "image/png"
        - "image/gif"
        - "image/tiff"
      responses:
        200:
          description: "no error"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: "file"
          in: "path"
          required: true
          description: "The path and name of file."
          type: "string"
        - name: "w"
          in: "query"
          type: "integer"
          description: "Sets the width of the image, in pixels."
        - name: "h"
          in: "query"
          type: "integer"
          description: "Sets the height of the image, in pixels."
        - name: "fit"
          in: "query"
          type: "string"
          description: "Sets how the image is fitted to its target dimensions."
          enum:
            - "crop"
            - "crop-focal-point"
        - name: "dpr"
          in: "query"
          type: "integer"
          description: "Multiples the overall image size."
        - name: "q"
          in: "query"
          type: "integer"
          description: "Defines the quality of the image."
        - name: "fm"
          in: "query"
          type: "string"
          description: "Encodes the image to a specific format."
          enum:
            - "jpg"
            - "png"
            - "webp"
        - name: "or"
          in: "query"
          type: "integer"
          description: "Rotates the image."
          enum:
            - "0"
            - "45"
            - "90"
            - "135"
            - "180"
            - "235"
            - "270"
            - "315"
        - name: "blur"
          in: "query"
          type: "integer"
          description: "Adds a blur effect to the image. Use values between 0 and 100."
      tags: ["Image"]
      x-code-samples:
        - lang: html
          source: |
            <img src="https://image.your-domain.tld/test.jpg?w=150&h=150&fit=crop&dpr=2&q=85" alt="" />
